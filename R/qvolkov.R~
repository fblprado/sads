qvolkov<-function(p, theta, m, J, lower.tail = TRUE, log.p = FALSE, ...){
  if (length(theta) > 1 | length(m) > 1 |length(J) > 1) stop("vectorization of theta, m and J is not implemented")
  if (!all(is.finite(c(J, theta, m)))) stop("all parameters should be finite")
  if (J <= 0)  stop("J must be larger than zero")
  if (theta <= 0) stop("theta must be larger than zero")
  if(m < 0 | m > 1) stop("m must be between zero and one")
  if (log.p) p <- exp(p)
  if(!lower.tail) p <- 1 - p
  d<-NULL
  busca <- function(U1, U2){
    repeat{
      tt <- pvolkov(U2, theta=theta, m=m, J=J, ... )
      U2 <- ifelse(tt>=U1, U2-1, U2)
      a1 <- U2
      U2 <- ifelse(tt<U1, U2+1, U2)
      a2 <- U2
      if(pvolkov(min(a1, a2), theta=theta, m=m, J=J, ...) < U1 & U1 <= pvolkov(max(a1, a2), theta=theta, m=m, J=J, ...)){
        return(max(a1, a2))
      }
    }
  }
  for (i in 1:length(p)){
    U1 <- p[i]
    U2 <- round(runif(1, min=1, max=J/10))
    if(U1 <= pvolkov(0, theta=theta, m=m, J=J, ...)){
      d[i] <- 0
    } else if(U1 >= 0.999999999999999999){
      d[i] <- Inf
    } else{
      d[i] <- busca(U1, U2)
    }
  }
  return(d)
}
